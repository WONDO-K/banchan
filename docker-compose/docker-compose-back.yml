x-environments: &default
  env_file: .env # 기본 환경 파일을 지정합니다.

services:
  banchan_back1:
    container_name: banchan_back1
    build:
      context: ../Banchan/
      dockerfile: Dockerfile
    expose:
      - "8080"
    <<: *default
    environment:
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mynetwork

  banchan_back2:
    container_name: banchan_back2
    build:
      context: ../Banchan/
      dockerfile: Dockerfile
    expose:
      - "8080"
    <<: *default
    environment:
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mynetwork

  mysql:
    image: mysql:8.0
    container_name: mysql
    expose:
      - "3306"
    <<: *default
    volumes:
      - ../Banchan/mysql_data:/var/lib/mysql
    networks:
      - mynetwork
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -u${MYSQL_ROOT_USER} -p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass banchan201105
    container_name: redis
    expose:
      - "6379"
    <<: *default
    volumes:
      - ../Banchan/redis_data:/data
      - ../Banchan/redis_data/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      device: ../Banchan/mysql_data
      o: bind
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: ../Banchan/redis_data
      o: bind

networks:
  mynetwork:
    external: true
